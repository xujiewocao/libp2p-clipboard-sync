name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build release binaries
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: libp2p-clipboard-sync-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: libp2p-clipboard-sync-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: libp2p-clipboard-sync-macos-aarch64
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install protobuf
          
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # Install protobuf for Windows
          choco install protoc
          
      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          
      - name: Rename binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/libp2p-clipboard-sync.exe ${{ matrix.artifact_name }}
          
      - name: Rename binary (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cp target/${{ matrix.target }}/release/libp2p-clipboard-sync ${{ matrix.artifact_name }}
          chmod +x ${{ matrix.artifact_name }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}
          
  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: List artifacts
        run: |
          ls -R artifacts
          
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/*/*.exe
            artifacts/*/*
          draft: true
          prerelease: false